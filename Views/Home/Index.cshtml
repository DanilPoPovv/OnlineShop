@using OnlineShop.Models.POCO;
@model OnlineShop.Models.ViewModel.SearchViewModel

@{
    ViewData["Title"] = "Home Page";
}

<h2>Welcome to the Online Shop</h2>
<a href="/swagger" class="btn btn-success">SWAGGER</a>

<!-- Search Form for Users -->
<h3>Search Users</h3>
<form method="get" action="@Url.Action("Index", "Home")">
    <input type="hidden" name="searchShops" value="@Model.ShopSearchTerm" /> <!-- Save shop search -->

    <div class="input-group mb-3">
        <input type="text" class="form-control" name="searchUsers" placeholder="Search users..." value="@Model.UserSearchTerm">
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>

<!-- Users Table -->
<h3>Users</h3>
<table class="table">
    <thead>
        <tr>
            <th>Shop Name</th>
            <th>Name</th>
            <th>Role</th>
        </tr>
    </thead>
    <tbody id="usersTableBody">
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Shop?.Name</td>
                <td>@user.Name</td>
                <td>@user.Role</td>
                <td>
                    <button class="btn btn-danger btn-sm" onclick="deleteUser('@user.Name')">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (User.IsInRole("Admin"))
{
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createUserModal">
        Create User
    </button>
}

<!-- Search Form for Shops -->
<h3>Search Shops</h3>
<form method="get" action="@Url.Action("Index", "Home")">
    <input type="hidden" name="searchUsers" value="@Model.UserSearchTerm" /> <!-- Save user search -->

    <div class="input-group mb-3">
        <input type="text" class="form-control" name="searchShops" placeholder="Search shops..." value="@Model.ShopSearchTerm">
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>

<!-- Shops Table -->
<h3>Shops</h3>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var shop in Model.Shops)
        {
            <tr>
                <td>@shop.Id</td>
                <td>@shop.Name</td>
                <td>
                    <a href="/Shop/Index/@shop.Id" class="btn btn-info">View Shop</a>
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="deleteShop('@shop.Id')">Delete</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@if (User.IsInRole("Admin"))
{
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createShopModal">
        Create Shop
    </button>
}

<!-- MODAL WINDOW FOR ADDING USERS -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createUserForm">
                    <div class="mb-3">
                        <label for="userName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="userName" required>
                    </div>
                    <div class="mb-3">
                        <label for="userPassword" class="form-label">Password</label>
                        <input type="password" class="form-control" id="userPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="userRole" class="form-label">Role</label>
                        <select class="form-select" id="userRole">
                            <option value="0">Admin</option>
                            <option value="1">Manager</option>
                            <option value="2">Seller</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="shopName" class="form-label">Shop Name (optional)</label>
                        <input type="text" class="form-control" id="shopName">
                    </div>
                    <button type="submit" class="btn btn-primary">Add User</button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- JAVASCRIPT CODE FOR AJAX REQUEST -->
<script>
    document.getElementById("createUserForm").addEventListener("submit", function(event) {
        event.preventDefault();

        let userName = document.getElementById("userName").value;
        let userPassword = document.getElementById("userPassword").value;
        let userRole = document.getElementById("userRole").value;
        let shopName = document.getElementById("shopName").value;

        fetch("/User/Create", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                name: userName,
                password: userPassword,
                role: parseInt(userRole),
                shopName: shopName || null
            })
        })
        .then(response => response.json())
        .then(data => {
            alert("User added successfully!");

            // Add new user to the table without reloading
            let table = document.getElementById("usersTableBody");
            let row = table.insertRow();
            row.insertCell(0).textContent = data.shop ? data.shop.name : "No Shop";
            row.insertCell(1).textContent = data.name;
            row.insertCell(2).textContent = data.role;

            // Close modal and reset form
            document.getElementById("createUserForm").reset();
            var modal = bootstrap.Modal.getInstance(document.getElementById("createUserModal"));
            modal.hide();
        })
        .catch(error => console.error("Error:", error));
    });
    function deleteUser(name) {
        if (!confirm("Are you sure you want to delete this user?"))
        {
            return;
        }

        fetch("/User/Delete", {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ userName: name })
        })
            .then(response => {
                console.log(response);
                if (!response.ok) {
                    throw new Error("Failed to delete user.");
                }
                return response.json();
            })
            .then(data => {
                alert(data.message);
                location.reload(); // Перезагрузка страницы
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Error deleting user.");
            });
    }
    function deleteShop(shopId) {
        if (!confirm("Are you sure you want to delete this shop?")) {
            return;
        }

        fetch(`/Shop/Delete`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ ShopId: shopId })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to delete shop.");
                }
                return response.json();
            })
            .then(data => {
                alert(data.message);
                location.reload();
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Error deleting shop.");
            });
    }

</script>
<!-- MODAL WINDOW FOR ADDING SHOPS -->
<div class="modal fade" id="createShopModal" tabindex="-1" aria-labelledby="createShopModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createShopModalLabel">Create Shop</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createShopForm">
                    <div class="mb-3">
                        <label for="createShopName" class="form-label">Shop Name</label>
                        <input type="text" class="form-control" id="createShopName" required>
                    </div>
                    <div class="mb-3">
                        <label for="createManagerName" class="form-label">Manager Name</label>
                        <input type="text" class="form-control" id="createManagerName">
                    </div>
                    <button type="submit" class="btn btn-primary">Add Shop</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("createShopForm").addEventListener("submit", function (event) {
        event.preventDefault();

        let shopName = document.getElementById("createShopName").value;
        let managerName = document.getElementById("createManagerName").value;

        if (!shopName.trim() && !managerName.trim()) {
            alert("Both fields are empty!");
            return;
        }

        fetch("/Shop/Create", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                Name: shopName.trim(),
                Manager: managerName.trim() || null
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to create shop.");
                }
                return response.json();
            })
            .then(data => {
                alert("Shop added successfully!");

                // Закрытие модального окна
                let modal = bootstrap.Modal.getInstance(document.getElementById("createShopModal"));
                modal.hide();

                // Очистка формы
                document.getElementById("createShopForm").reset();

                // Добавление в таблицу без перезагрузки (если нужно)
                let table = document.querySelector("tbody"); // Найди таблицу магазинов
                let row = table.insertRow();
                row.insertCell(0).textContent = data.id;
                row.insertCell(1).textContent = data.name;
                let cell3 = row.insertCell(2);
                let viewButton = document.createElement("a");
                viewButton.href = `/Shop/Index/${data.id}`;
                viewButton.classList.add("btn", "btn-info");
                viewButton.textContent = "View Shop";
                cell3.appendChild(viewButton);
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Error adding shop.");
            });
    });
</script>